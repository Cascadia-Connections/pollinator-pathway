@model PaginatedList<PollinatorPathway.Areas.Identity.Data.PollinatorPathwayUser>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Admin Search";
    Layout = "_Layout";
}

<div class = "tables">
 
<p>
    <a asp-controller="Home" asp-action="CreateAdmin" class="link-light">Create New</a>
</p>
<form asp-action="AdminList" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" class="searchField" name="searchValue" />
            <select class="searchType" name="searchType">
              <option value="Name">First/Last Name</option>
              <option value="Email">Email</option>
            </select>
            <input type="submit" value="Search" class="searchButton" /> |
            <a asp-action="AdminList">Back to Full List</a>
        </p>
    </div>
</form>
@*<form asp-controller="Home" asp-action="SearchForAdminBy">
    <p>
        <input type="text" class="searchField" name="searchValue" />
        <select class="searchType" id="searchType">
          <option value="LastName">Last Name</option>
          <option value="Email">Email</option>
        </select>
        <input type="submit" class="searchButton" value="Search" />
    </p>
</form>*@
  
<table id="table">
    <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email Address</th>
        <th>Phone</th> 
        <th></th>
    </tr>

    @foreach (var admin in Model)
    {
        <tr>
            <td>
                @admin.FirstName
            </td>
            <td>
                @admin.LastName
            </td>
            <td>
                @admin.Email
            </td>
            <td>
                @admin.PhoneNumber
            </td>
         
          <td class="rightedge">
                  @Html.ActionLink("Remove", "DeleteAdmin", new { id = @admin.Id }, new { onclick = "return confirm('Are you sure you want to delete " + @admin.FirstName+"?');" }) |
                <a asp-action="UpdateAdmin" asp-controller="Home"  asp-route-id="@admin.Id">Update</a>
            </td>
           
           
        </tr>
    }

</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="AdminList"
   asp-route-sortOrder="@ViewData["CurrentAdminSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentAdminFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="AdminList"
   asp-route-sortOrder="@ViewData["CurrentAdminSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentAdminFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
</div>

